version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    environment:
      - FLASK_ENV=${ENVIRONMENT:-production}
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST:-db}:${DB_PORT:-5432}/${DB_NAME}
      - INT_DB_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST:-db}:${DB_PORT:-5432}/${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - PORT=5000
    depends_on:
      - db
    networks:
      - seedmart-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend 
      dockerfile: Dockerfile.prod
      args:
        - API_URL=${API_URL:-http://backend:5000/api}
    ports:
      - "${HTTP_PORT:-80}:3000"
      - "${HTTPS_PORT:-443}:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=${ENVIRONMENT:-production}
      - PORT=3000
      - API_URL=${API_URL:-http://backend:5000/api}
    networks:
      - seedmart-network
    restart: unless-stopped

  db:
    image: postgres:14
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - seedmart-network
    restart: unless-stopped
    profiles:
      - local
      - dev

volumes:
  postgres_data:

networks:
  seedmart-network:
    driver: bridge
